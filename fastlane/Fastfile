
# global declrations
device_name = nil

default_platform :ios

platform :ios do
  before_all do |options|
    device_name = options[:ios] == 'latest' ? options[:device] : "#{options[:device]} (#{ios})"
    update_fastlane
    setup_circle_ci
  end

  desc "Runs all the tests"
  lane :test do 
    begin
      test_action()
    rescue => execption
      on_error(execption)
    end
  end

  desc "Internal Testers for Staging"
  lane :beta do
    upload_to_testflight(
      ipa:ENV['BITRISE_IPA_PATH'],
      changelog: ENV['GIT_CLONE_COMMIT_MESSAGE_SUBJECT'],
      # distribute_external: false
      # reject_build_waiting_for_review: true
      # submit_beta_review: false
      skip_submission: true,
      app_identifier: "com.nbpapps.DiscontBankApp-Staging",
      groups: [
        "BPs",
      ],
    )
  end

  desc "Submit to review"
  lane :release do 
     upload_to_testflight(
     ipa:ENV['BITRISE_IPA_PATH'],
     changelog: ENV['GIT_CLONE_COMMIT_MESSAGE_SUBJECT'],
     distribute_external: true,
     app_identifier: "com.nbpapps.DiscontBankApp",
     reject_build_waiting_for_review: true,
     groups: [
       "BPs",
     ],
     )
     deliver(
       submit_for_review: true,
       force: false,
       app_identifier: "com.nbpapps.DiscontBankApp",
       automatic_release: false,
       submission_information: {
         add_id_info_uses_idfa: false
       }
     )
 	end
 end

def test_action
    scan(
      project: "DiscontBankApp/DiscontBankApp.xcodeproj",
#       skip_package_dependencies_resolution: true,
#       disable_package_automatic_updates: true,
      scheme: "DiscontBankApp",
      devices: [device_name],
#       output_types: "junit",
#       output_directory: "./reports"
    )
end

def on_error(execption)
  puts("error")
  puts(execption)
  notification(
    title: "Fastlane fail",
    message: "#{execption}"
  )
  ifttt(
    api_key: ENV['IFTTT_API_KEY'], #can be found here - https://ifttt.com/maker_webhooks/settings
    event_name: "fail",
    value1: "#{execption}"
  )
end
